/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frameak;

import exekutagarriak.EuskalSelekzioa;
import exekutagarriak.EuskalSelekzioaMenua;

import java.time.LocalDate;
import java.util.ArrayList;
import model.*;
import exekutagarriak.*;
import static exekutagarriak.EuskalSelekzioaMenua.selekzioa;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.WindowEvent;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author arceredillo.adrian
 */
public class partidakAntolatu extends javax.swing.JFrame {
    
    public static ArrayList<IntegranteSeleccion> seleccion = new ArrayList<IntegranteSeleccion>();
    public static ArrayList<Futbolista> futbolistasSeleccion = new ArrayList<Futbolista>(); //arrayList que contiene solamente elementos del tipo FUTBOLISTA
    public static int cantidadJugadoresTarjeta = 0;
    
    public static ArrayList<Futbolista> jugadoresTodasLasTarjetas = new ArrayList<Futbolista>();    //arrayList que guardará los nombres de todos los jugadores amonestados (CON REPETIDOS)
    public static ArrayList<Masajista> niJugadorNiEntrenador = new ArrayList<Masajista>();  //arrayList para separar los de tipo Masajista (Fisioterapeuta y Médico)
    
    public static Partida[] partidaGuztiak = new Partida[20];
    public static int numeroPartidasCreadas = 0; 
    
    public static ArrayList<Futbolista> amonestadosPorPartida = new ArrayList<Futbolista>();
    
    /**
     * Creates new form partidakAntolatu
     */
    public partidakAntolatu() {
        this.setTitle("Partidak Antolatu - Adrian");
        this.setPreferredSize(new Dimension(1200, 1000));
        initComponents();
        
        InfoPartida.setLineWrap(true);
        AmonestadosPartida.setLineWrap(true);
        PlantillaJugadores.setLineWrap(true);
        PlantillaEntrenadores.setLineWrap(true);
        PlantillaMedicos.setLineWrap(true);
        PlantillaOtros.setLineWrap(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabelTitulo = new javax.swing.JLabel();
        CrearPartidaTitulo = new javax.swing.JLabel();
        GuardarDatosPartida = new javax.swing.JButton();
        VerNombresJugadores = new javax.swing.JLabel();
        VerPlantillaNombres = new javax.swing.JLabel();
        CrearPlantilla = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        InfoPartida = new javax.swing.JTextArea();
        RegistroPartidas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PlantillaJugadores = new javax.swing.JTextArea();
        FiltroJugadores = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PlantillaEntrenadores = new javax.swing.JTextArea();
        FiltroEntrenadores = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PlantillaMedicos = new javax.swing.JTextArea();
        FiltroMedicos = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        PlantillaOtros = new javax.swing.JTextArea();
        FiltroOtros = new javax.swing.JLabel();
        CasillaFechaUser = new javax.swing.JTextField();
        DataPartida = new javax.swing.JLabel();
        AurkariaPartida = new javax.swing.JLabel();
        CasillaAurkariaUser = new javax.swing.JTextField();
        TxartelakPartida = new javax.swing.JLabel();
        OtraTarjeta = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        CrearPartida = new javax.swing.JButton();
        IzenaUser = new javax.swing.JTextField();
        AbizenaUser = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        OtraPartida = new javax.swing.JButton();
        InfoPartidaCreada = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        AmonestadosPartida = new javax.swing.JTextArea();
        Amonestados = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        todasLasPartidas = new javax.swing.JTextArea();
        infoTodasLasPartidas = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane6.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelTitulo.setText("PARTIDA BAT ANTOLATU");

        CrearPartidaTitulo.setText("Partida Sortu:");
        CrearPartidaTitulo.setToolTipText("");

        GuardarDatosPartida.setText("Guardar Partida");
        GuardarDatosPartida.setActionCommand("");
        GuardarDatosPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarDatosPartidaActionPerformed(evt);
            }
        });

        VerNombresJugadores.setText("Plantilla Osoa: ");

        VerPlantillaNombres.setText("aaa");

        CrearPlantilla.setText("Sortu");
        CrearPlantilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearPlantillaActionPerformed(evt);
            }
        });

        InfoPartida.setColumns(20);
        InfoPartida.setRows(5);
        InfoPartida.setText("Info partida:");
        jScrollPane1.setViewportView(InfoPartida);

        RegistroPartidas.setText("VER TODAS LAS PARTIDAS");
        RegistroPartidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistroPartidasActionPerformed(evt);
            }
        });

        PlantillaJugadores.setColumns(20);
        PlantillaJugadores.setRows(5);
        PlantillaJugadores.setText("Informacion del personal");
        jScrollPane2.setViewportView(PlantillaJugadores);

        FiltroJugadores.setText("Jugadores: ");

        PlantillaEntrenadores.setColumns(20);
        PlantillaEntrenadores.setRows(5);
        PlantillaEntrenadores.setText("Informacion del personal");
        jScrollPane3.setViewportView(PlantillaEntrenadores);

        FiltroEntrenadores.setText("Entrenadores: ");

        PlantillaMedicos.setColumns(20);
        PlantillaMedicos.setRows(5);
        PlantillaMedicos.setText("Informacion del personal");
        jScrollPane4.setViewportView(PlantillaMedicos);

        FiltroMedicos.setText("Medicos: ");

        PlantillaOtros.setColumns(20);
        PlantillaOtros.setRows(5);
        PlantillaOtros.setText("Informacion del personal");
        jScrollPane5.setViewportView(PlantillaOtros);

        FiltroOtros.setText("Otros: ");

        CasillaFechaUser.setText("Sartu data");
        CasillaFechaUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CasillaFechaUserActionPerformed(evt);
            }
        });

        DataPartida.setText("-> Data (yyyy-mm-dd):");

        AurkariaPartida.setText("-> Aurkaria: ");

        CasillaAurkariaUser.setText("Sartu aurkariaren izena");

        TxartelakPartida.setText("-> Txartela ezarri jokalari bati: ");

        OtraTarjeta.setText("+1");
        OtraTarjeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtraTarjetaActionPerformed(evt);
            }
        });

        CrearPartida.setText("Hasi");
        CrearPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearPartidaActionPerformed(evt);
            }
        });

        IzenaUser.setText("Izena");

        AbizenaUser.setText("Abizena");

        OtraPartida.setText("Otra Partida");
        OtraPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtraPartidaActionPerformed(evt);
            }
        });

        InfoPartidaCreada.setText("Datos de la partida: ");

        AmonestadosPartida.setColumns(20);
        AmonestadosPartida.setRows(5);
        AmonestadosPartida.setText("Jugadores con tarjeta: ");
        jScrollPane7.setViewportView(AmonestadosPartida);

        Amonestados.setText("Amonestados:");

        todasLasPartidas.setColumns(20);
        todasLasPartidas.setRows(5);
        todasLasPartidas.setText("Registro de partidas");
        jScrollPane8.setViewportView(todasLasPartidas);

        infoTodasLasPartidas.setText("RESUMEN TEMPORADA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FiltroJugadores)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(VerNombresJugadores)
                        .addGap(18, 18, 18)
                        .addComponent(CrearPlantilla)
                        .addGap(18, 18, 18)
                        .addComponent(VerPlantillaNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FiltroMedicos)
                    .addComponent(FiltroEntrenadores)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FiltroOtros)
                    .addComponent(jLabelTitulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(RegistroPartidas)
                            .addGap(434, 434, 434))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(TxartelakPartida)
                                .addComponent(GuardarDatosPartida)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(InfoPartidaCreada)
                                            .addGap(148, 148, 148))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jScrollPane1)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Amonestados, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(DataPartida, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CasillaFechaUser))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AurkariaPartida)
                                        .addGap(18, 18, 18)
                                        .addComponent(CasillaAurkariaUser))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(CrearPartidaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(CrearPartida, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(OtraPartida))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(IzenaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(AbizenaUser, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(OtraTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(117, 117, 117)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(infoTodasLasPartidas, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(271, 271, 271))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitulo)
                    .addComponent(RegistroPartidas))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(VerNombresJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CrearPlantilla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VerPlantillaNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addComponent(FiltroJugadores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(FiltroEntrenadores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(FiltroMedicos))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CrearPartidaTitulo)
                            .addComponent(CrearPartida)
                            .addComponent(OtraPartida))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CasillaFechaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DataPartida))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AurkariaPartida)
                            .addComponent(CasillaAurkariaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxartelakPartida)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OtraTarjeta)
                            .addComponent(IzenaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AbizenaUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(GuardarDatosPartida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(InfoPartidaCreada)
                            .addComponent(Amonestados))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane7)
                        .addComponent(jScrollPane1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FiltroOtros)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoTodasLasPartidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane8))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GuardarDatosPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarDatosPartidaActionPerformed
        // TODO add your handling code here:
        
        IzenaUser.setEnabled(false);  
        AbizenaUser.setEnabled(false);
        
        
        if (CasillaFechaUser.getText().equals("")) {   //se mostrará un mensaje si el campo de la FECHA se queda vacío
            
            JOptionPane.showMessageDialog(null,"Parece que te falta algún dato! Ten en cuenta que para crear una \n"
                            + "nueva partida es necesario conocer la FECHA de la misma. \n\nVuelve a intentarlo...", "Error",JOptionPane.WARNING_MESSAGE);
            
        } else if (CasillaAurkariaUser.getText().equals("")) {  //se mostrará un mensaje si el campo del ADVERSARIO se queda vacío
            
            JOptionPane.showMessageDialog(null,"Parece que te falta algún dato! Ten en cuenta que en todas las partidas \n"
                            + "hacen falta 2 adversarios. De lo contrario no se podría jugar. \n\nVuelve a intentarlo...", "Error",JOptionPane.WARNING_MESSAGE); 
            
        } else if (IzenaUser.getText().equals("") || AbizenaUser.getText().equals("")) {
            
            JOptionPane.showMessageDialog(null,"Comprueba que al menos 1 jugador ha recibido una tarjeta en esta partida! \n"
                            + "\n\nVuelve a intentarlo...", "Error",JOptionPane.WARNING_MESSAGE);
            
            IzenaUser.setEnabled(true);  
            AbizenaUser.setEnabled(true);
        }
        
        //valor de entrada de la FECHA de la partida
        String fechaPartidaUser = CasillaFechaUser.getText();
        
        LocalDate partidarenData = LocalDate.parse(fechaPartidaUser);
        System.out.println("La fecha de esta nueva partida es: " + partidarenData);
        
        //valor de entrada del ADVERSARIO
        String aurkariaUser = CasillaAurkariaUser.getText().substring(0, 1).toUpperCase() + CasillaAurkariaUser.getText().substring(1);
        
        
        //InfoJugadores.setText(amonestadoUser);
        
        String nombreAmonestado = IzenaUser.getText().substring(0, 1).toUpperCase() + IzenaUser.getText().substring(1).toLowerCase();
        String apellidoAmonestado = AbizenaUser.getText().substring(0, 1).toUpperCase() + AbizenaUser.getText().substring(1).toLowerCase();
        
        
        //ArrayList<Futbolista> amonestadosPorPartida = new ArrayList<Futbolista>();
        
        for (int i = 0; i < futbolistasSeleccion.size(); ++i) {
            if (futbolistasSeleccion.get(i) != null) {
                if (futbolistasSeleccion.get(i).getNombre().equals(nombreAmonestado) && futbolistasSeleccion.get(i).getApellidos().equals(apellidoAmonestado)) {
                    System.out.println(futbolistasSeleccion.get(i));
                    
                    amonestadosPorPartida.add(futbolistasSeleccion.get(i));
                    
                }
            }
        }
        
        //CREAR LA PARTIDA con los datos introducidos por el usuario (+ print)
        Partida p1 = new Partida(partidarenData, aurkariaUser, amonestadosPorPartida);
        
        //añadir la partida al arrayList que recoge todas las partidas que se vayan creando
        //partidaGuztiak
        for (int f = 0; f < partidaGuztiak.length; ++f) {
            if (partidaGuztiak[f] == null) {
                partidaGuztiak[f] = (Partida) p1;
                break;
            }
        }
        System.out.println("TODAS LAS PARTIDAS: " + Arrays.toString(partidaGuztiak));
        InfoPartida.setText("Fecha de la partida: " + p1.getData() + "\n"   //ver Fecha y Adversario de la partida
                + "Adversario: " + p1.getAurkaria());
        
        
        System.out.println(amonestadosPorPartida);
        //visualizar jugadores amonestado en esta partida
        AmonestadosPartida.setText("");
        for (int i = 0; i < amonestadosPorPartida.size(); ++i) {
            AmonestadosPartida.setText(AmonestadosPartida.getText() + amonestadosPorPartida.get(i) + "\n" + "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n");
        }
        
        //vaciar las casillas de texto cuando la partide se guarde por primera vez
        IzenaUser.setText("");
        AbizenaUser.setText(""); 
        
        ++numeroPartidasCreadas;
        
        
        
        
        
        
        
        //habilitar el botón "OtraPartida" para crera una partida nueva
        OtraPartida.setEnabled(true);
        RegistroPartidas.setEnabled(true);
        
        
    }//GEN-LAST:event_GuardarDatosPartidaActionPerformed

    private void CrearPlantillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearPlantillaActionPerformed
        // TODO add your handling code here:
        
        CrearPlantilla.setEnabled(false);
        
        seleccion = EuskalSelekzioaMenua.selekzioa;  //al arrayList "seleccion", asignarle el contenido del arrayList creado en "EuskalSelekzioa"
        System.out.println(seleccion);
        
        int contarJugadores = 0;
        for (int i = 0; i < seleccion.size(); ++i) {
            if (seleccion.get(i).getClass() == Futbolista.class) {
                //jugadoresSeleccion.add(seleccion.get(i));
                System.out.println(seleccion.get(i));
                futbolistasSeleccion.add((Futbolista) seleccion.get(i));
                ++contarJugadores;
            }
        }
        
        System.out.println("--------------------------");
        
        VerPlantillaNombres.setText("");
        for (int i = 0; i < futbolistasSeleccion.size(); ++i) {
            String nombrePlayer = futbolistasSeleccion.get(i).getNombre() + " " + futbolistasSeleccion.get(i).getApellidos() + ", ";
            //VerPlantillaNombres.setText(VerPlantillaNombres.getText() + futbolistasSeleccion.get(i).getNombre() + " " + futbolistasSeleccion.get(i).getApellidos() + ", <br>");
            VerPlantillaNombres.setText(VerPlantillaNombres.getText() + nombrePlayer);
            
        }
        
        CrearPartida.setEnabled(true);
        
        InfoPartida.setText("");  //vaciar la caja de texto de jugadores random (= jugadores que recibirán tarjeta)
        //VerPlantillaNombres.setText("fff");
        
        //todos los tipo Futbolista
        PlantillaJugadores.setText("");
        PlantillaJugadores.setEnabled(true);
        PlantillaJugadores.setSelectedTextColor(Color.white);   //PlantillaJugadores.setText("");
        
        //todos los tipo Entrenador
        PlantillaEntrenadores.setText("");
        PlantillaEntrenadores.setEnabled(true);
        PlantillaEntrenadores.setSelectedTextColor(Color.white);    //PlantillaEntrenadores.setText("");
        
        //todos los tipo Masajista (FISIOTERAPEUTA)
        PlantillaMedicos.setText("");
        PlantillaMedicos.setEnabled(true);
        PlantillaMedicos.setSelectedTextColor(Color.white);     //PlantillaMedicos.setText("");
        
        //todos los tipo Masajista (MÉDICO)
        PlantillaOtros.setText("");
        PlantillaOtros.setEnabled(true);
        PlantillaOtros.setSelectedTextColor(Color.white);   //PlantillaOtros.setText("");
        
        
        //filtrar por tipo Futbolista
        for (int i = 0; i < selekzioa.size(); ++i) {
            if (selekzioa.get(i).getClass() == Futbolista.class) {    //los tipo Futbolistas
                
                PlantillaJugadores.setText(PlantillaJugadores.getText() + "Integrante: " + ++cantidadJugadoresTarjeta + "\n" + 
                        selekzioa.get(i) + "\n" + "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n");
            }
        }
        PlantillaJugadores.setEditable(false);
        
        //filtrar por tipo Entrenador
        for (int i = 0; i < selekzioa.size(); ++i) {
            if (selekzioa.get(i).getClass() == Entrenador.class) {    //los tipo Futbolistas
                
                PlantillaEntrenadores.setText(PlantillaEntrenadores.getText() + "Integrante: " + ++cantidadJugadoresTarjeta + "\n" + 
                        selekzioa.get(i) + "\n" + "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n");
            }
        }
        PlantillaEntrenadores.setEditable(false);
        
        //filtrar por tipo Masajista (diferenciar Médico y Fisioterapeuta)
        for (int i = 0; i < selekzioa.size(); ++i) {
            if (selekzioa.get(i).getClass() == Masajista.class) {    //los tipo Futbolistas
                
                niJugadorNiEntrenador.add((Masajista) selekzioa.get(i));
            }
        }
        
        for (int g = 0; g < niJugadorNiEntrenador.size(); ++g) {
            if (niJugadorNiEntrenador.get(g).getTitulacion().equals("Fisioterapeuta")) {    //en caso de ser MÉDICO
                    
                PlantillaOtros.setText(PlantillaOtros.getText() + "Integrante: " + ++cantidadJugadoresTarjeta + "\n" + 
                    niJugadorNiEntrenador.get(g) + "\n" + "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n");
                
            } else if (niJugadorNiEntrenador.get(g).getTitulacion().equals("Medico")) {
                    
                PlantillaMedicos.setText(PlantillaMedicos.getText() + "Integrante: " + ++cantidadJugadoresTarjeta + "\n" + 
                    niJugadorNiEntrenador.get(g) + "\n" + "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n");
                    
            }
        }
        PlantillaMedicos.setEditable(false);
        PlantillaOtros.setEditable(false);
        
        System.out.println("hola" + niJugadorNiEntrenador);
        
        
    }//GEN-LAST:event_CrearPlantillaActionPerformed

    private void RegistroPartidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistroPartidasActionPerformed
        // TODO add your handling code here:
        
        //todasLasPartidas
        todasLasPartidas.setEnabled(true);
        todasLasPartidas.setEditable(true);
        todasLasPartidas.setText(Arrays.toString(partidaGuztiak));
        todasLasPartidas.setText("");
        
        for (int i = 0; i < partidaGuztiak.length; ++i) {
            if (partidaGuztiak[i] != null) {
                todasLasPartidas.setText(todasLasPartidas.getText() + partidaGuztiak[i].toString() + "\n" + "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n");
                //todasLasPartidas.setText("a");
            }
            
        }
        
        
        
    }//GEN-LAST:event_RegistroPartidasActionPerformed

    private void CrearPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearPartidaActionPerformed
        // TODO add your handling code here:
        
        GuardarDatosPartida.setEnabled(true);   //habilitar botón para crear una partida nueva
        
        ArrayList<Futbolista> tarjetasEstaPartida = new ArrayList<Futbolista>();
        
        //habilitar casilla de nueva FECHA
        CasillaFechaUser.setEditable(true);
        CasillaFechaUser.setText("");
        CasillaFechaUser.setForeground(Color.black);
        
        //habilitar casilla de nuevo ADVERSARIO
        CasillaAurkariaUser.setEditable(true);
        CasillaAurkariaUser.setText("");
        CasillaAurkariaUser.setForeground(Color.black);
        
                
        //habilitar botón para añadir una nueva tarjeta
        OtraTarjeta.setEnabled(true);
        
        //habilitar botón para guardar los datos de la partida
        GuardarDatosPartida.setEnabled(true);
        
        //habilitar casilla para introducir el NOMBRE del jugador amonestado
        IzenaUser.setEditable(true);
        IzenaUser.setEnabled(true);
        IzenaUser.setText("");
        IzenaUser.setForeground(Color.black);
        
        //habilitar casilla para introducir el APELLIDO del jugador amonestado
        AbizenaUser.setEditable(true);
        AbizenaUser.setEnabled(true);
        AbizenaUser.setText("");
        AbizenaUser.setForeground(Color.black);
        
        /**
         * bloquear el botón de COMENZAR a crear una partida; si se quiere hacer otra 
         * partida bastará con pulsar "Guardar Partida". Es decir, las casillas de la 
         * partida a crear, se vaciarán para poder volver a introducir datos.
         */ 
        CrearPartida.setEnabled(false);
        
    }//GEN-LAST:event_CrearPartidaActionPerformed

    private void CasillaFechaUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CasillaFechaUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CasillaFechaUserActionPerformed

    private void OtraTarjetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OtraTarjetaActionPerformed
        // TODO add your handling code here:
        
        IzenaUser.setEnabled(true);
        IzenaUser.setEditable(true);
        IzenaUser.setText("");
        
        AbizenaUser.setEnabled(true);
        AbizenaUser.setEditable(true);
        AbizenaUser.setText("");
        
        
    }//GEN-LAST:event_OtraTarjetaActionPerformed

    private void OtraPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OtraPartidaActionPerformed
        // TODO add your handling code here:
        
        amonestadosPorPartida.clear();
        
        CasillaFechaUser.setText("");
        CasillaAurkariaUser.setText("");
        IzenaUser.setEnabled(true);     IzenaUser.setText("");
        AbizenaUser.setEnabled(true);     AbizenaUser.setText("");
    }//GEN-LAST:event_OtraPartidaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(partidakAntolatu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(partidakAntolatu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(partidakAntolatu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(partidakAntolatu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new partidakAntolatu().setVisible(true);
                GuardarDatosPartida.setEnabled(false);  //bloquear el botón "RandomPlayerAdd" según se ejecute el frame
                CrearPartida.setEnabled(false); //bloquear el botón "Hasi" hasta que no se cree la selección (pulsar "Sortu")
                InfoPartida.setEnabled(false);
                AmonestadosPartida.setEnabled(false);
                PlantillaJugadores.setEnabled(false);
                PlantillaEntrenadores.setEnabled(false);
                PlantillaMedicos.setEnabled(false);
                PlantillaOtros.setEnabled(false);
                
                CasillaFechaUser.setEditable(false);            CasillaFechaUser.setForeground(Color.gray);
                CasillaAurkariaUser.setEditable(false);         CasillaAurkariaUser.setForeground(Color.gray);
                //CasillaJugadorTarjetaUser.setEditable(false);   CasillaJugadorTarjetaUser.setForeground(Color.gray);
                IzenaUser.setEditable(false);       IzenaUser.setForeground(Color.gray);
                AbizenaUser.setEditable(false);     AbizenaUser.setForeground(Color.gray);
                
                OtraTarjeta.setEnabled(false);
                OtraPartida.setEnabled(false);
                
                todasLasPartidas.setEditable(false);
                todasLasPartidas.setEnabled(false);
                
                RegistroPartidas.setEnabled(false); //bloquear el botón para ver la info de todas las partidas creadas
                
                //partidakAntolatu.setPreferredSize(new Dimension(400, 300));
                personalizacionJframe();
            }
        });
        
        //seleccion = EuskalSelekzioa.selekzioa;  //prueba 1
        EuskalSelekzioaMenua.selekzioarenPlantillaOsoaSortu();
        
        EuskalSelekzioaMenua.taldekatuta2(selekzioa);
        //EuskalSelekzioa.selekzioOsoaSortu();
        
        
        
        Partida par1 = new Partida();
    }
    
    /**
     * Método para aplicarle a nuestro jframe unas determinadas 
     * características. 
     */
    public static void personalizacionJframe() {
            //JFrame todasLasPartidas= new JFrame("Partidak 112");
            //todasLasPartidas.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            
            
            /*todasLasPartidas.setPreferredSize(new Dimension(400, 300));
            todasLasPartidas.pack();
            todasLasPartidas.setLocationRelativeTo(null);
            todasLasPartidas.setVisible(true);*/
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField AbizenaUser;
    public static javax.swing.JLabel Amonestados;
    public static javax.swing.JTextArea AmonestadosPartida;
    public static javax.swing.JLabel AurkariaPartida;
    public static javax.swing.JTextField CasillaAurkariaUser;
    public static javax.swing.JTextField CasillaFechaUser;
    public static javax.swing.JButton CrearPartida;
    public static javax.swing.JLabel CrearPartidaTitulo;
    public static javax.swing.JButton CrearPlantilla;
    public static javax.swing.JLabel DataPartida;
    public static javax.swing.JLabel FiltroEntrenadores;
    public static javax.swing.JLabel FiltroJugadores;
    public static javax.swing.JLabel FiltroMedicos;
    public static javax.swing.JLabel FiltroOtros;
    public static javax.swing.JButton GuardarDatosPartida;
    public static javax.swing.JTextArea InfoPartida;
    public static javax.swing.JLabel InfoPartidaCreada;
    public static javax.swing.JTextField IzenaUser;
    public static javax.swing.JButton OtraPartida;
    public static javax.swing.JButton OtraTarjeta;
    public static javax.swing.JTextArea PlantillaEntrenadores;
    public static javax.swing.JTextArea PlantillaJugadores;
    public static javax.swing.JTextArea PlantillaMedicos;
    public static javax.swing.JTextArea PlantillaOtros;
    public static javax.swing.JButton RegistroPartidas;
    public static javax.swing.JLabel TxartelakPartida;
    public static javax.swing.JLabel VerNombresJugadores;
    public static javax.swing.JLabel VerPlantillaNombres;
    public static javax.swing.JLabel infoTodasLasPartidas;
    public static javax.swing.JLabel jLabelTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextArea todasLasPartidas;
    // End of variables declaration//GEN-END:variables
}
